/*
 * Immich
 *
 * Immich API
 *
 * The version of the OpenAPI document: 1.17.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct AlbumResponseDto {
    #[serde(rename = "assetCount")]
    pub asset_count: i32,
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "ownerId")]
    pub owner_id: String,
    #[serde(rename = "albumName")]
    pub album_name: String,
    #[serde(rename = "createdAt")]
    pub created_at: String,
    #[serde(rename = "albumThumbnailAssetId")]
    pub album_thumbnail_asset_id: Option<String>,
    #[serde(rename = "shared")]
    pub shared: bool,
    #[serde(rename = "sharedUsers")]
    pub shared_users: Vec<crate::models::UserResponseDto>,
    #[serde(rename = "assets")]
    pub assets: Vec<crate::models::AssetResponseDto>,
}

impl AlbumResponseDto {
    pub fn new(asset_count: i32, id: String, owner_id: String, album_name: String, created_at: String, album_thumbnail_asset_id: Option<String>, shared: bool, shared_users: Vec<crate::models::UserResponseDto>, assets: Vec<crate::models::AssetResponseDto>) -> AlbumResponseDto {
        AlbumResponseDto {
            asset_count,
            id,
            owner_id,
            album_name,
            created_at,
            album_thumbnail_asset_id,
            shared,
            shared_users,
            assets,
        }
    }
}


